{"ast":null,"code":"import \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.date.to-iso-string.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.index-of.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport FriendContact from \"./components/FriendContact.vue\";\nexport default {\n  components: {\n    FriendContact: FriendContact\n  },\n  data: function data() {\n    return {\n      friends: [{\n        id: \"anish\",\n        name: \"Anish Hariharan\",\n        phone: \"123 456 789\",\n        email: \"anish@gmail.com\",\n        fav: false,\n        vis: false\n      }, {\n        id: \"tiger\",\n        name: \"Tiger\",\n        phone: \"123 456 789\",\n        email: \"anishT@gmail.com\",\n        fav: false,\n        vis: false\n      }]\n    };\n  },\n  methods: {\n    toggleFavouriteStatus: function toggleFavouriteStatus(friendId) {\n      var identifiedFriend = this.friends.find(function (friend) {\n        return friend.id === friendId;\n      });\n      identifiedFriend.fav = !identifiedFriend.fav;\n    },\n    addContact: function addContact(name, phone, email) {\n      var newFriend = {\n        id: new Date().toISOString(),\n        name: name,\n        phone: phone,\n        email: email,\n        fav: false\n      };\n      this.friends.push(newFriend);\n    },\n    visibleData: function visibleData(id) {\n      var friend = this.friends.find(function (friend) {\n        return friend.id === id;\n      });\n      friend.vis = !friend.vis;\n    },\n    deleteContact: function deleteContact(id) {\n      var friend = this.friends.find(function (friend) {\n        return friend.id === id;\n      });\n      var index = this.friends.indexOf(friend);\n      index === 0 ? this.friends.shift() : this.friends.splice(index, index);\n      console.log(this.friends);\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;AAyBA,OAAOA,aAAY,MAAO,gCAAgC;AAC1D,eAAe;EACbC,UAAU,EAAE;IAAED,aAAa,EAAbA;EAAa,CAAC;EAC5BE,IAAI,kBAAG;IACL,OAAO;MACLC,OAAO,EAAE,CACP;QACEC,EAAE,EAAE,OAAO;QACXC,IAAI,EAAE,iBAAiB;QACvBC,KAAK,EAAE,aAAa;QACpBC,KAAK,EAAE,iBAAiB;QACxBC,GAAG,EAAE,KAAK;QACVC,GAAG,EAAE;MACP,CAAC,EACD;QACEL,EAAE,EAAE,OAAO;QACXC,IAAI,EAAE,OAAO;QACbC,KAAK,EAAE,aAAa;QACpBC,KAAK,EAAE,kBAAkB;QACzBC,GAAG,EAAE,KAAK;QACVC,GAAG,EAAE;MACP,CAAC;IAEL,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,qBAAqB,iCAACC,QAAQ,EAAE;MAC9B,IAAMC,gBAAe,GAAI,IAAI,CAACV,OAAO,CAACW,IAAI,CAAC,gBAAK;QAAA,OAAKC,MAAM,CAACX,EAAC,KAAMQ,QAAQ;MAAA;MAC3EC,gBAAgB,CAACL,GAAE,GAAI,CAACK,gBAAgB,CAACL,GAAE;IAC7C,CAAC;IACDQ,UAAU,sBAACX,IAAI,EAAEC,KAAK,EAAEC,KAAK,EAAE;MAC7B,IAAMU,SAAQ,GAAI;QAChBb,EAAE,EAAE,IAAIc,IAAI,EAAE,CAACC,WAAW,EAAE;QAC5Bd,IAAG,EAAIA,IAAI;QACXC,KAAI,EAAIA,KAAK;QACbC,KAAI,EAAIA,KAAK;QACbC,GAAG,EAAE;MACP;MACA,IAAI,CAACL,OAAO,CAACiB,IAAI,CAACH,SAAS;IAC7B,CAAC;IACDI,WAAW,uBAACjB,EAAE,EAAC;MACb,IAAMW,MAAK,GAAI,IAAI,CAACZ,OAAO,CAACW,IAAI,CAAC,gBAAK;QAAA,OAAKC,MAAM,CAACX,EAAC,KAAMA,EAAE;MAAA;MAC3DW,MAAM,CAACN,GAAE,GAAI,CAACM,MAAM,CAACN,GAAE;IACzB,CAAC;IACDa,aAAa,yBAAClB,EAAE,EAAC;MACf,IAAMW,MAAK,GAAI,IAAI,CAACZ,OAAO,CAACW,IAAI,CAAC,gBAAK;QAAA,OAAKC,MAAM,CAACX,EAAC,KAAMA,EAAE;MAAA;MAC3D,IAAImB,KAAI,GAAI,IAAI,CAACpB,OAAO,CAACqB,OAAO,CAACT,MAAM;MACvCQ,KAAI,KAAM,IAAI,IAAI,CAACpB,OAAO,CAACsB,KAAK,EAAC,GAAI,IAAI,CAACtB,OAAO,CAACuB,MAAM,CAACH,KAAK,EAAEA,KAAK;MACrEI,OAAO,CAACC,GAAG,CAAC,IAAI,CAACzB,OAAO;IAC1B;EACF;AACF,CAAC","names":["FriendContact","components","data","friends","id","name","phone","email","fav","vis","methods","toggleFavouriteStatus","friendId","identifiedFriend","find","friend","addContact","newFriend","Date","toISOString","push","visibleData","deleteContact","index","indexOf","shift","splice","console","log"],"sourceRoot":"","sources":["/home/guest/Desktop/newVueProject/src/App.vue"],"sourcesContent":["<template>\n  <section>\n    <header>\n      <h1>My Friends</h1>\n    </header>\n    <new-friend @add-contact=\"addContact\"></new-friend>\n    <ul>\n      <friend-contact\n        v-for=\"friend in friends\"\n        :id=\"friend.id\"\n        :key=\"friend.id\"\n        :name=\"friend.name\"\n        :phone-number=\"friend.phone\"\n        :email-a=\"friend.email\"\n        :is-favourite=\"friend.fav\"\n        :is-visible=\"friend.vis\"\n        @toggle-favourite=\"toggleFavouriteStatus\"\n        @visible=\"visibleData\"\n        @delete=\"deleteContact\"\n      ></friend-contact>\n    </ul>\n  </section>\n</template>\n\n<script>\nimport FriendContact from \"./components/FriendContact.vue\";\nexport default {\n  components: { FriendContact},\n  data() {\n    return {\n      friends: [\n        {\n          id: \"anish\",\n          name: \"Anish Hariharan\",\n          phone: \"123 456 789\",\n          email: \"anish@gmail.com\",\n          fav: false,\n          vis: false\n        },\n        {\n          id: \"tiger\",\n          name: \"Tiger\",\n          phone: \"123 456 789\",\n          email: \"anishT@gmail.com\",\n          fav: false,\n          vis: false\n        },\n      ],\n    };\n  },\n  methods: {\n    toggleFavouriteStatus(friendId) {\n      const identifiedFriend = this.friends.find(friend => friend.id === friendId)\n      identifiedFriend.fav = !identifiedFriend.fav\n    },\n    addContact(name, phone, email) {\n      const newFriend = {\n        id: new Date().toISOString(),\n        name : name,\n        phone : phone,\n        email : email,\n        fav: false\n      }\n      this.friends.push(newFriend)\n    },\n    visibleData(id){\n      const friend = this.friends.find(friend => friend.id === id)\n      friend.vis = !friend.vis\n    },\n    deleteContact(id){\n      const friend = this.friends.find(friend => friend.id === id)\n      let index = this.friends.indexOf(friend)\n      index === 0 ? this.friends.shift() : this.friends.splice(index, index)\n      console.log(this.friends)\n    }\n  },\n};\n</script>\n\n<style>\n* {\n  box-sizing: border-box;\n}\n\nhtml {\n  font-family: \"Jost\", sans-serif;\n}\n\nbody {\n  margin: 0;\n}\n\nheader {\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.26);\n  margin: 3rem auto;\n  border-radius: 10px;\n  padding: 1rem;\n  background-color: #58004d;\n  color: white;\n  text-align: center;\n  width: 90%;\n  max-width: 40rem;\n}\n\n#app ul {\n  margin: 0;\n  padding: 0;\n  list-style: none;\n}\n\n#app li,\n#app form {\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.26);\n  margin: 1rem auto;\n  border-radius: 10px;\n  padding: 1rem;\n  text-align: center;\n  width: 90%;\n  max-width: 40rem;\n}\n\n#app h2 {\n  font-size: 2rem;\n  border-bottom: 4px solid #ccc;\n  color: #58004d;\n  margin: 0 0 1rem 0;\n}\n\n#app button {\n  font: inherit;\n  cursor: pointer;\n  border: 1px solid #ff0077;\n  background-color: #ff0077;\n  color: white;\n  padding: 0.05rem 1rem;\n  box-shadow: 1px 1px 2px rgba(0, 0, 0, 0.26);\n}\n\n#app button:hover,\n#app button:active {\n  background-color: #ec3169;\n  border-color: #ec3169;\n  box-shadow: 1px 1px 4px rgba(0, 0, 0, 0.26);\n}\n\n#app input {\n  font: inherit;\n  padding: 0.15rem;\n}\n#app label{\n  font-weight: bold;\n  margin-right: 1rem;\n  width: 7rem;\n  display: inline-block;\n}\n#app form div {\n  margin: 1rem 0;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}